 如果一个自然数N的K进制表示中任意的相邻的两位都不是相邻的数字，
那么我们就说这个数是K好数。
求L位K进制数中K好数的数目。例如K = 4，L = 2的时候，
所有K好数为11、13、20、22、30、31、33 共7个。
给定K、L，求L位K好数的数目。


#include<stdio.h>  
__int64 f[20][20];  
int main()  
{  
    int k,l,i,j,p;  
    __int64 sum=0;  
    scanf("%d%d",&k,&l);  
  
    for(i=0;i<=k-1;i++)  
        f[1][i]=1;  
  
    for(i=2;i<=l;i++)  
    {  
        for(j=0;j<=k-1;j++)  
        {  
            for(p=0;p<=k-1;p++)  
  
                if(p!=j-1&&p!=j+1)  
  
                f[i][j]+=f[i-1][p];  
              
        }  
    }  
  
  
    for(i=1;i<=k-1;i++)  
        sum+=f[l][i];  
    printf("%I64d",sum);      
    return 0;  
}  
动态规划求解。f[i][j]   i表示数的长度，j表示末尾位的取值。
点击菜单可测试，测试数据例如:4 2